//------------------------------------------------------------------------------
// <auto-generated>
// </auto-generated>
//------------------------------------------------------------------------------
using GameFrame;
using UnityEngine;
public static partial class AutoLocalRotate
{
    
    public static void AddLocalRotate(this ECSEntity ecsEntity)
    {
        ecsEntity.AddComponent<GXGame.LocalRotate>();
    }
    
    public static void AddLocalRotate(this ECSEntity ecsEntity,UnityEngine.Quaternion param)
    {
        var p  =  (GXGame.LocalRotate)ecsEntity.AddComponent<GXGame.LocalRotate>();
        p.Value = param;
    }
          
    public static GXGame.LocalRotate GetLocalRotate(this ECSEntity ecsEntity)
    {
        return (GXGame.LocalRotate)ecsEntity.GetComponent(ComponentsID<GXGame.LocalRotate>.TID);
    }
     
    public static ECSEntity SetLocalRotate(this ECSEntity ecsEntity,UnityEngine.Quaternion param)
    {
        var p = (GXGame.LocalRotate)ecsEntity.GetComponent(ComponentsID<GXGame.LocalRotate>.TID);
        p.Value = param;
        ((World)ecsEntity.Parent).Reactive(ComponentsID<GXGame.LocalRotate>.TID, ecsEntity);
        View view = ecsEntity.GetView();
        if (view == null) return null;
        ((GXGame.ILocalRotate) (view.Value)).LocalRotate(p);
        return ecsEntity;
    }
    
    public static ECSEntity AddOrSetLocalRotate(this ECSEntity ecsEntity,UnityEngine.Quaternion param)
    {
        var p = (GXGame.LocalRotate)ecsEntity.GetComponent(ComponentsID<GXGame.LocalRotate>.TID);
        if(p==null)
        {
           p = (GXGame.LocalRotate)(ecsEntity.AddComponent<GXGame.LocalRotate>());
        }
        p.Value = param;
        ((World)ecsEntity.Parent).Reactive(ComponentsID<GXGame.LocalRotate>.TID, ecsEntity);
        View view = ecsEntity.GetView();
        if (view == null) return null;
        ((GXGame.ILocalRotate) (view.Value)).LocalRotate(p);
        return ecsEntity;
    } 
         
}