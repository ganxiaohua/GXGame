//------------------------------------------------------------------------------
// <auto-generated>
// </auto-generated>
//------------------------------------------------------------------------------
using GameFrame.Runtime;
using UnityEngine;
public static partial class AutoView
{
    
    public static void AddView(this EffEntity effEntity)
    {
        effEntity.AddComponent<GameFrame.Runtime.View>();
    }
    
    public static void AddView(this EffEntity effEntity,GameFrame.Runtime.IEceView param)
    {
        var p  =  (GameFrame.Runtime.View)effEntity.AddComponent<GameFrame.Runtime.View>();
        p.Value = param;
    }
          
    public static GameFrame.Runtime.View GetView(this EffEntity effEntity)
    {
        return (GameFrame.Runtime.View)effEntity.GetComponent(ComponentsID<GameFrame.Runtime.View>.TID);
    }
     
    public static EffEntity SetView(this EffEntity effEntity,GameFrame.Runtime.IEceView param)
    {
        var p = (GameFrame.Runtime.View)effEntity.GetComponent(ComponentsID<GameFrame.Runtime.View>.TID);
        p.Value = param;
        ((World)effEntity.Parent).Reactive(ComponentsID<GameFrame.Runtime.View>.TID, effEntity);
        
        return effEntity;
    }
    
    public static EffEntity AddOrSetView(this EffEntity effEntity,GameFrame.Runtime.IEceView param)
    {
        var p = (GameFrame.Runtime.View)effEntity.GetComponent(ComponentsID<GameFrame.Runtime.View>.TID);
        if(p==null)
        {
           p = (GameFrame.Runtime.View)(effEntity.AddComponent<GameFrame.Runtime.View>());
        }
        p.Value = param;
        ((World)effEntity.Parent).Reactive(ComponentsID<GameFrame.Runtime.View>.TID, effEntity);
        
        return effEntity;
    } 
         
}