//------------------------------------------------------------------------------
// <auto-generated>
// </auto-generated>
//------------------------------------------------------------------------------
using GameFrame.Runtime;
using UnityEngine;
public static partial class AutoAtkCompCountdown
{
    
    public static void AddAtkCompCountdown(this EffEntity effEntity)
    {
        effEntity.AddComponent<GXGame.AtkCompCountdown>();
    }
    
    public static void AddAtkCompCountdown(this EffEntity effEntity,System.Single param)
    {
        var p  =  (GXGame.AtkCompCountdown)effEntity.AddComponent<GXGame.AtkCompCountdown>();
        p.Value = param;
    }
          
    public static GXGame.AtkCompCountdown GetAtkCompCountdown(this EffEntity effEntity)
    {
        return (GXGame.AtkCompCountdown)effEntity.GetComponent(ComponentsID<GXGame.AtkCompCountdown>.TID);
    }
     
    public static EffEntity SetAtkCompCountdown(this EffEntity effEntity,System.Single param)
    {
        var p = (GXGame.AtkCompCountdown)effEntity.GetComponent(ComponentsID<GXGame.AtkCompCountdown>.TID);
        p.Value = param;
        ((World)effEntity.Parent).Reactive(ComponentsID<GXGame.AtkCompCountdown>.TID, effEntity);
        
        return effEntity;
    }
    
    public static EffEntity AddOrSetAtkCompCountdown(this EffEntity effEntity,System.Single param)
    {
        var p = (GXGame.AtkCompCountdown)effEntity.GetComponent(ComponentsID<GXGame.AtkCompCountdown>.TID);
        if(p==null)
        {
           p = (GXGame.AtkCompCountdown)(effEntity.AddComponent<GXGame.AtkCompCountdown>());
        }
        p.Value = param;
        ((World)effEntity.Parent).Reactive(ComponentsID<GXGame.AtkCompCountdown>.TID, effEntity);
        
        return effEntity;
    } 
         
}