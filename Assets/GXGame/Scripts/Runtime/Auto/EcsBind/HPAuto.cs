//------------------------------------------------------------------------------
// <auto-generated>
// </auto-generated>
//------------------------------------------------------------------------------
using GameFrame.Runtime;
using UnityEngine;
public static partial class AutoHP
{
    
    public static void AddHP(this EffEntity effEntity)
    {
        effEntity.AddComponent<GXGame.HP>();
    }
    
    public static void AddHP(this EffEntity effEntity,System.Int32 param)
    {
        var p  =  (GXGame.HP)effEntity.AddComponent<GXGame.HP>();
        p.Value = param;
    }
          
    public static GXGame.HP GetHP(this EffEntity effEntity)
    {
        return (GXGame.HP)effEntity.GetComponent(ComponentsID<GXGame.HP>.TID);
    }
     
    public static EffEntity SetHP(this EffEntity effEntity,System.Int32 param)
    {
        var p = (GXGame.HP)effEntity.GetComponent(ComponentsID<GXGame.HP>.TID);
        p.Value = param;
        ((World)effEntity.Parent).Reactive(ComponentsID<GXGame.HP>.TID, effEntity);
        
        return effEntity;
    }
    
    public static EffEntity AddOrSetHP(this EffEntity effEntity,System.Int32 param)
    {
        var p = (GXGame.HP)effEntity.GetComponent(ComponentsID<GXGame.HP>.TID);
        if(p==null)
        {
           p = (GXGame.HP)(effEntity.AddComponent<GXGame.HP>());
        }
        p.Value = param;
        ((World)effEntity.Parent).Reactive(ComponentsID<GXGame.HP>.TID, effEntity);
        
        return effEntity;
    } 
         
}